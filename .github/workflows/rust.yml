name: Rust

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: read

on:
  push:
    branches:
      - master
    paths:
      - ".github/workflows/*.yml"
      - "Cargo.toml"
      - "src/**.rs"
  pull_request:
    branches:
      - master
    paths:
      - ".github/workflows/*.yml"
      - "Cargo.toml"
      - "src/**.rs"

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    permissions:
      checks: write
      contents: write
      pull-requests: write
    steps:
      - name: Repository checkout
        uses: actions/checkout@v3
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
          profile: minimal
          components: rustfmt, clippy
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check --verbose
      - name: Run cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features -- --deny clippy::cargo

  build-linux:
    needs:
      - lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain: [1.70.0, stable, nightly]
    name: "Build (OS: Linux, Toolchain: ${{ matrix.toolchain }})"
    steps:
      - name: Repository checkout
        uses: actions/checkout@v3
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          default: true
          profile: minimal
      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features --verbose

  build-macos:
    needs:
      - lint
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain: [1.70.0, stable, nightly]
    name: "Build (OS: MacOS, Toolchain: ${{ matrix.toolchain }})"
    steps:
      - name: Repository checkout
        uses: actions/checkout@v3
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          default: true
          profile: minimal
      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features --verbose

  build-windows:
    needs:
      - lint
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain: [1.70.0, stable, nightly]
    name: "Build (OS: Windows, Toolchain: ${{ matrix.toolchain }})"
    steps:
      - name: Repository checkout
        uses: actions/checkout@v3
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          default: true
          profile: minimal
      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features --verbose
